package com.demo.study.retrofitdemo.activitys;import android.os.Handler;import android.os.Looper;import android.os.Message;import android.support.v7.app.AppCompatActivity;import android.os.Bundle;import android.util.Log;import android.view.View;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.demo.study.retrofitdemo.Bean.BookBean;import com.demo.study.retrofitdemo.Bean.HistoryBean;import com.demo.study.retrofitdemo.R;import com.demo.study.retrofitdemo.Utils.CustomInterceptor;import com.demo.study.retrofitdemo.Utils.RequestInterceptor;import com.demo.study.retrofitdemo.interfaces.FileUploadService;import com.demo.study.retrofitdemo.interfaces.HtmlService;import java.io.BufferedInputStream;import java.io.File;import java.io.FileNotFoundException;import java.io.FileOutputStream;import java.io.IOException;import java.io.InputStream;import java.util.HashMap;import java.util.List;import java.util.Map;import java.util.concurrent.TimeUnit;import okhttp3.MediaType;import okhttp3.MultipartBody;import okhttp3.OkHttpClient;import okhttp3.RequestBody;import okhttp3.ResponseBody;import okhttp3.logging.HttpLoggingInterceptor;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;import retrofit2.Retrofit;import retrofit2.converter.gson.GsonConverterFactory;import retrofit2.converter.scalars.ScalarsConverterFactory;import retrofit2.http.Multipart;public class MainActivity extends AppCompatActivity implements View.OnClickListener {    public Button getButton;    public TextView showText;    public ImageView pic;    private Call<ResponseBody> call;    private Handler handler;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        getButton = (Button) findViewById(R.id.get_button);        getButton.setOnClickListener(this);        showText = (TextView) findViewById(R.id.show_text);        InputStream in = getResources().openRawResource(R.raw.pic);        int length = 0;        File file = new File("pic.png");        try {            FileOutputStream fos = new FileOutputStream(file);            byte[] b = new byte[1024];            int len = 0;            while((len = in.read(b)) != -1) {                fos.write(b,0,len);            }        } catch (IOException e) {            e.printStackTrace();        }        Log.d("size",file.getTotalSpace() + "");        HttpLoggingInterceptor httpLoggingInterceptor = new HttpLoggingInterceptor();        httpLoggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);        OkHttpClient.Builder httpClientBuilder = new OkHttpClient.Builder().                addInterceptor(new CustomInterceptor()).                addInterceptor(new RequestInterceptor()).                addInterceptor(httpLoggingInterceptor).                connectTimeout(1000, TimeUnit.MILLISECONDS);        Retrofit retrofit = new Retrofit.Builder().                addConverterFactory(ScalarsConverterFactory.create()).                baseUrl("http://192.168.1.103:8080/api/").                build();        RequestBody requestBody = RequestBody.create(MediaType.parse("multipart/form-data"),file);        MultipartBody.Part body = MultipartBody.Part.createFormData("file",file.getName(),requestBody);        RequestBody description = RequestBody.create(MediaType.parse("multipart/form-data"), "这是一个文件");        FileUploadService service = retrofit.create(FileUploadService.class);        call = service.uploadFile(description,body);//        HtmlService htmlService = retrofit.create(HtmlService.class);//        Map<String,String> maps = new HashMap<>();//        maps.put("name","byhieg");//        maps.put("password","123456");//        call = htmlService.doLogin(maps);        handler = new Handler();    }    @Override    public void onClick(View v) {        Toast.makeText(MainActivity.this, "进行网络请求中", Toast.LENGTH_SHORT).show();//        new Thread(new Runnable() {//            @Override//            public void run() {//                try {//                    final String str = call.execute().body();//                    handler.post(new Runnable() {//                        @Override//                        public void run() {//                            showText.append(str);//                        }//                    });//                } catch (IOException e) {//                    e.printStackTrace();//                }//            }//        }).start();//        call.enqueue(new Callback<ResponseBody>() {//            @Override//            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {////            }////            @Override//            public void onFailure(Call<ResponseBody> call, Throwable t) {////            }//        });        call.enqueue(new Callback<ResponseBody>() {            @Override            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {                Toast.makeText(MainActivity.this, "请求结束", Toast.LENGTH_SHORT).show();                try {                    showText.setText(response.body().string());                } catch (IOException e) {                    e.printStackTrace();                }            }            @Override            public void onFailure(Call<ResponseBody> call, Throwable t) {            }        });    }}